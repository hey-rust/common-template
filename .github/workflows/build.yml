name: build

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-rust:
    strategy:
      matrix:
        platform: [ ubuntu-latest ]
    runs-on: ${{ matrix.platform }}
    steps:
      # 作用：使用 actions/checkout@v4 操作从 GitHub 仓库中检出代码，包括所有子模块。
      # fetch-depth: 0 确保检出完整的 Git 历史记录，submodules: recursive 确保递归检出所有子模块。
      - name: 检出代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
      - name: 安装 Rust
        run: rustup toolchain install stable --component llvm-tools-preview
      - name: 安装 cargo-llvm-cov(用于代码覆盖率分析)
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: 安装 nextest(用于并行运行 Rust 测试的工具)
        uses: taiki-e/install-action@nextest
      - name: 缓存 Rust 构建工件
        uses: Swatinem/rust-cache@v2
      - name: 检查代码格式
        run: cargo fmt -- --check
      - name: 检查包错误
        run: cargo check --all
      - name: Lint Rust 源代码
        run: cargo clippy --all-targets --all-features --tests --benches -- -D warnings
      - name: 执行 Rust 测试
        run: cargo nextest run --all-features
      # 配置文件为 cliff.toml，生成的变更日志输出到 CHANGES.md
      - name: 生成变更日志(仅在推送标签时执行)
        uses: orhun/git-cliff-action@v2
        id: git-cliff
        if: startsWith(github.ref, 'refs/tags/')
        with:
          config: cliff.toml
          args: -vv --latest --strip header
        env:
          OUTPUT: CHANGES.md
      # 仅在推送标签时执行。发布说明内容为生成的变更日志
      - name: 发布
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          body: ${{ steps.git-cliff.outputs.content }}
